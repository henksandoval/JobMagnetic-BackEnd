name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages and scanner
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-sonar-scanner-

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Add SonarScanner to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore and build project
        run: dotnet build

      - name: Run Unit Tests and Generate Coverage
        working-directory: tests/JobMagnet.Unit.Tests
        run: |
          dotnet test JobMagnet.Unit.Tests.csproj \
            --no-build \
            /p:CollectCoverage=true \
            /p:CoverletOutput=./coverage.opencover.xml \
            /p:CoverletOutputFormat=opencover

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "=== Current Directory ==="
          pwd

          cd tests/JobMagnet.Unit.Tests

          pwd

          ls coverage.opencover.xml

          head -n 10 coverage.opencover.xml

          dotnet sonarscanner begin /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

          dotnet build --no-incremental

          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"