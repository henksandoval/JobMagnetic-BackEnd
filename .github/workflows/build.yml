name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest  # Usamos ubuntu-latest para consistencia

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages and scanner
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/pom.xml', '**/build.gradle', '**/package-lock.json', '**/composer.lock') }}
          restore-keys: ${{ runner.os }}-sonar-scanner-

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore and build project
        run: dotnet build

      - name: Run Unit Tests and Collect Coverage
        working-directory: ${{ github.workspace }}
        run: dotnet test tests/JobMagnet.Tests.csproj --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)/tests/CarRentalApi.Tests/
        env:
          OpenTelemetry__Enabled: 'false'
          Serilog__MinimumLevel__Default: 'Critical'

      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin \
            /k:"henksandoval_JobMagnetic-BackEnd" \
            /o:"henksandoval" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/tests/JobMagnet.Tests/coverage.opencover.xml

          ~/.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"